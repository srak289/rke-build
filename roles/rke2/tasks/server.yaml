- name: Check for rke2-server
  ansible.builtin.stat:
    path: /usr/lib/systemd/system/rke2-server.service
  register: rke2_server

- name: Install rke2 server
  ansible.builtin.shell:
    cmd: |
      curl -sfL https://get.rke2.io | sh -
  when: not rke2_server.stat.exists

- name: Create Rancher Config
  ansible.builtin.copy:
    content: |
      token: some-shared-secret
      tls-san:
        - kubemaster
        - kubemaster.subatomicnetworks.net
    dest: /etc/rancher/rke2/config.yaml
  notify: Restart rke2-server

- name: Check Cert
  ansible.builtin.stat:
    path: /etc/pki/tls/certs/snakeoil.pem
  register: snakeoil

- name: Generate Cert
  ansible.builtin.shell:
    cmd: |
      openssl req \
        -x509 \
        -newkey rsa:2048 \
        -days 3650 \
        -sha256 \
        -nodes \
        -out /etc/pki/tls/certs/snakeoil.pem \
        -keyout /etc/pki/tls/private/snakeoil.pem \
        -addext "subjectAltName=DNS:kubemaster.subatomicnetworks.net,DNS:kubemaster" \
        -subj "/O=SnakeOil/ST=Massachusetts/L=Cambridge/CN=kubemaster.subatomicnetworks.net"
  when: not snakeoil.stat.exists

- name: Fetch Files
  ansible.builtin.fetch:
    src: "{{item}}"
    dest: host_files/{{inventory_hostname}}/
    flat: True
  loop:
    - /etc/pki/tls/certs/snakeoil.pem
    - /var/lib/rancher/rke2/server/token

- name: Install Requirements
  ansible.builtin.dnf:
    name:
      - nginx
      - kubectl
    state: present
    disable_excludes: kubernetes

- name: Configure nginx
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: Restart Nginx

- name: Make .kube
  ansible.builtin.file:
    path: /root/.kube
    state: directory

- name: Save credentials
  ansible.builtin.copy:
    src: /etc/rancher/rke2/rke2.yaml
    dest: /root/.kube/config
    remote_src: True

- name: fail
  ansible.builtin.fail:
    msg: fail

- name: Add dashboard
  ansible.builtin.shell:
    cmd: |
      kubectl apply \
        -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
      kubectl proxy
